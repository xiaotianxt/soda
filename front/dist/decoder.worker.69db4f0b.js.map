{"version":3,"sources":["node_modules/is-observable/index.js","node_modules/threads/dist/serializers.js","node_modules/threads/dist/common.js","node_modules/threads/dist/symbols.js","node_modules/threads/dist/transferable.js","node_modules/threads/dist/types/messages.js","node_modules/threads/dist/worker/implementation.browser.js","node_modules/process/browser.js","node_modules/threads/dist/worker/index.js","node_modules/threads/worker.js","node_modules/geotiff/src/decoder.worker.js"],"names":["module","exports","value","Symbol","observable","process","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","decode","fileDirectory","buffer","decoder","decoded"],"mappings":"AAAA,AEAA,ADAA,AEAA,ACAA,ACAA,ACAA,AGAA;AFAA,ALCA,ADAA,AEAA,ACAA,ACAA,ACAA,AEDA,ACCA;ACDA,AHCA,ALCA,ADAA,AEAA,ACAA,ACAA,ACAA,AEDA,IDAIK,OAAO,GAAGL,MAAM,CAACC,OAAP,GAAiB,EAA/B,EAEA;AACA,ALDA,ADAA,AEAA,ACAA,ACAA,ACAA,AEDA;AEDA,AVCAD,AOGA,ALDA,ADAA,AEAA,ACAA,ACAA,ACAA,AEDA,MRDM,CAACC,OAAP,GAAiB,UAAAC,KAAK,EAAI;AACzB,AOGD,ALDA,ADAA,AEAA,ACAA,ACAA,ACAA,AEDA,MRDK,CAACA,KAAL,EAAY;AUAb,AVCE,AEEF,ADAA,AEAA,ACAA,ACAA,ACAA,AEDA,WRDS,IUDM4D,CVCb,KUDF,CAAsBC,aAAtB,EAAqCC,MAArC,EAA6C;AAC3C,AVCA,AOGF,ALDA,ADAA,AEAA,ACAA,ACAA,ACAA,AEDA,GRJ0B,CAKzB,AOCG1D,IGJI2D,OAAO,GAAG,EHIlB,IGJwB,6BAAWF,aAAX,CAAtB;AACA,AHIF,ALDA,ADAA,AEAA,ACAA,ACAA,ACAA,AEDA,IDEIxD,IGJI2D,OAAO,GAAG,IHIlB,EGJwBD,OAAO,CAACH,MAAR,CAAeC,aAAf,EAA8BC,MAA9B,CAAtB;AACA,ARGF,ADAA,AGAA,ACAA,ACAA,AEDA,SEFS,sBAASE,OAAT,CAAP;AACD,AVCA,AOGD,ALDA,ADAA,AGAA,ACAA,ACAA,AEDA,MRDK,GOGI1D,KPHGL,MAAM,CAACC,IOGnB,GAA4B,GPHvB,MAA6B,QAA7B,IAAyC,OAAOF,KAAK,CAACC,MAAM,CAACC,UAAR,CAAZ,KAAoC,UAAjF,EAA6F;AAC5F,AOGE,ALDJ,ADAA,AGAA,ACAA,ACAA,AEDA,QDEU,IAAIK,KAAJ,CAAU,iCAAV,CAAN;AGHJ,AVCE,AOGD,ALDD,ADAA,AGAA,ACAA,ACAA,AEDA,WRDSP,KAAK,IUDP4D,CVCY5D,KUDnB,AVCwB,CAACC,MAAM,CAACC,UAAR,CAAL,EAAjB;AACA,AEEF,ADAA,AGAA,ACAA,ACAA,AEDA;ADEA,ALAA,ADAA,AGAA,ACAA,ACAA,AEDA,SDCSM,mBAAT,GAAgC;APD/B,AOEG,ALAJ,ADAA,AGAA,ACAA,ACAA,AEDA,MRDK,EOEK,IAAID,CPFFP,IOEF,CPFO,AOEG,CPFF,cAAD,CAAZ,KAAiC,UAArC,EAAiD,EOExC,CAAN;APDF,AOED,ALAD,ADAA,AGAA,ACAA,ACAA,AEDA,WRDSA,KAAK,KAAKA,KAAK,CAAC,cAAD,CAAL,EAAjB;AACA,AEEF,ADAA,AGAA,ACAA,ACAA,AEDA;ADCC,ANCD,AGAA,ACAA,ACAA,AEDA,aDAa;APAZ,AOCG,ANCJ,AGAA,ACAA,ACAA,AEDA,MDAQ,GPDA,KAAP;AACA,AOCO,ANCR,AGAA,ACAA,ACAA,AEDA,CRjBA,OOiBY,OAAOS,UAAP,KAAsB,UAA1B,EAAsC;AAClCL,ANCZ,AGAA,AEAA,AEDA,MDAYA,gBAAgB,GAAGK,UAAnB;AACH,ANCT,AGAA,AEAA,AEDA,KDFQ,MAEO;AACHL,ANCZ,AGAA,AEAA,AEDA,MDAYA,gBAAgB,GAAGE,gBAAnB;AACH,ANCT,AGAA,AEAA,AEDA;ADCK,ANCL,AGAA,AEAA,AEDA,GDNI,CAME,OAAOI,CAAP,EAAU;AACRN,ANCR,AGAA,AEAA,AEDA,IDAQA,gBAAgB,GAAGE,gBAAnB;AACH,ANCL,AGAA,AIDA;APEA,AODA;ADAI,ANEJ,AODA,MDDQ;AACA,ANER,AODA,QDDY,OAAOK,YAAP,KAAwB,UAA5B,EAAwC;AACpCN,ANEZ,AODA,MDDYA,kBAAkB,GAAGM,YAArB;AACH,ANET,AODA,KDHQ,MAEO;AACHN,ANEZ,AODA,MDDYA,kBAAkB,GAAGG,mBAArB;AACH,ANET,AODA;ADAK,ANEL,AODA,GDPI,CAME,OAAOE,CAAP,EAAU;AACRL,ANER,AODA,IDDQA,kBAAkB,GAAGG,mBAArB;AACH,ANEL,AODA;ADAC,ANED,AODA,CDpBC,GAAD;ANsBA,AODA;ADDA,ANGA,AODA,SDFSI,UAAT,CAAoBC,GAApB,EAAyB;AACrB,ANGJ,AODA,MDFQT,gBAAgB,KAAKK,UAAzB,EAAqC;AACjC,ANGR,AODA;ADDQ,ANGR,AODA,WDFeA,UAAU,CAACI,GAAD,EAAM,CAAN,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","file":"decoder.worker.69db4f0b.js","sourceRoot":"..","sourcesContent":["'use strict';\n\nmodule.exports = value => {\n\tif (!value) {\n\t\treturn false;\n\t}\n\n\t// eslint-disable-next-line no-use-extend-native/no-use-extend-native\n\tif (typeof Symbol.observable === 'symbol' && typeof value[Symbol.observable] === 'function') {\n\t\t// eslint-disable-next-line no-use-extend-native/no-use-extend-native\n\t\treturn value === value[Symbol.observable]();\n\t}\n\n\tif (typeof value['@@observable'] === 'function') {\n\t\treturn value === value['@@observable']();\n\t}\n\n\treturn false;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultSerializer = exports.extendSerializer = void 0;\nfunction extendSerializer(extend, implementation) {\n    const fallbackDeserializer = extend.deserialize.bind(extend);\n    const fallbackSerializer = extend.serialize.bind(extend);\n    return {\n        deserialize(message) {\n            return implementation.deserialize(message, fallbackDeserializer);\n        },\n        serialize(input) {\n            return implementation.serialize(input, fallbackSerializer);\n        }\n    };\n}\nexports.extendSerializer = extendSerializer;\nconst DefaultErrorSerializer = {\n    deserialize(message) {\n        return Object.assign(Error(message.message), {\n            name: message.name,\n            stack: message.stack\n        });\n    },\n    serialize(error) {\n        return {\n            __error_marker: \"$$error\",\n            message: error.message,\n            name: error.name,\n            stack: error.stack\n        };\n    }\n};\nconst isSerializedError = (thing) => thing && typeof thing === \"object\" && \"__error_marker\" in thing && thing.__error_marker === \"$$error\";\nexports.DefaultSerializer = {\n    deserialize(message) {\n        if (isSerializedError(message)) {\n            return DefaultErrorSerializer.deserialize(message);\n        }\n        else {\n            return message;\n        }\n    },\n    serialize(input) {\n        if (input instanceof Error) {\n            return DefaultErrorSerializer.serialize(input);\n        }\n        else {\n            return input;\n        }\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serialize = exports.deserialize = exports.registerSerializer = void 0;\nconst serializers_1 = require(\"./serializers\");\nlet registeredSerializer = serializers_1.DefaultSerializer;\nfunction registerSerializer(serializer) {\n    registeredSerializer = serializers_1.extendSerializer(registeredSerializer, serializer);\n}\nexports.registerSerializer = registerSerializer;\nfunction deserialize(message) {\n    return registeredSerializer.deserialize(message);\n}\nexports.deserialize = deserialize;\nfunction serialize(input) {\n    return registeredSerializer.serialize(input);\n}\nexports.serialize = serialize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.$worker = exports.$transferable = exports.$terminate = exports.$events = exports.$errors = void 0;\nexports.$errors = Symbol(\"thread.errors\");\nexports.$events = Symbol(\"thread.events\");\nexports.$terminate = Symbol(\"thread.terminate\");\nexports.$transferable = Symbol(\"thread.transferable\");\nexports.$worker = Symbol(\"thread.worker\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Transfer = exports.isTransferDescriptor = void 0;\nconst symbols_1 = require(\"./symbols\");\nfunction isTransferable(thing) {\n    if (!thing || typeof thing !== \"object\")\n        return false;\n    // Don't check too thoroughly, since the list of transferable things in JS might grow over time\n    return true;\n}\nfunction isTransferDescriptor(thing) {\n    return thing && typeof thing === \"object\" && thing[symbols_1.$transferable];\n}\nexports.isTransferDescriptor = isTransferDescriptor;\nfunction Transfer(payload, transferables) {\n    if (!transferables) {\n        if (!isTransferable(payload))\n            throw Error();\n        transferables = [payload];\n    }\n    return {\n        [symbols_1.$transferable]: true,\n        send: payload,\n        transferables\n    };\n}\nexports.Transfer = Transfer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkerMessageType = exports.MasterMessageType = void 0;\n/////////////////////////////\n// Messages sent by master:\nvar MasterMessageType;\n(function (MasterMessageType) {\n    MasterMessageType[\"cancel\"] = \"cancel\";\n    MasterMessageType[\"run\"] = \"run\";\n})(MasterMessageType = exports.MasterMessageType || (exports.MasterMessageType = {}));\n////////////////////////////\n// Messages sent by worker:\nvar WorkerMessageType;\n(function (WorkerMessageType) {\n    WorkerMessageType[\"error\"] = \"error\";\n    WorkerMessageType[\"init\"] = \"init\";\n    WorkerMessageType[\"result\"] = \"result\";\n    WorkerMessageType[\"running\"] = \"running\";\n    WorkerMessageType[\"uncaughtError\"] = \"uncaughtError\";\n})(WorkerMessageType = exports.WorkerMessageType || (exports.WorkerMessageType = {}));\n","\"use strict\";\n/// <reference lib=\"dom\" />\n// tslint:disable no-shadowed-variable\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst isWorkerRuntime = function isWorkerRuntime() {\n    const isWindowContext = typeof self !== \"undefined\" && typeof Window !== \"undefined\" && self instanceof Window;\n    return typeof self !== \"undefined\" && self.postMessage && !isWindowContext ? true : false;\n};\nconst postMessageToMaster = function postMessageToMaster(data, transferList) {\n    self.postMessage(data, transferList);\n};\nconst subscribeToMasterMessages = function subscribeToMasterMessages(onMessage) {\n    const messageHandler = (messageEvent) => {\n        onMessage(messageEvent.data);\n    };\n    const unsubscribe = () => {\n        self.removeEventListener(\"message\", messageHandler);\n    };\n    self.addEventListener(\"message\", messageHandler);\n    return unsubscribe;\n};\nexports.default = {\n    isWorkerRuntime,\n    postMessageToMaster,\n    subscribeToMasterMessages\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.expose = exports.isWorkerRuntime = exports.Transfer = exports.registerSerializer = void 0;\nconst is_observable_1 = __importDefault(require(\"is-observable\"));\nconst common_1 = require(\"../common\");\nconst transferable_1 = require(\"../transferable\");\nconst messages_1 = require(\"../types/messages\");\nconst implementation_1 = __importDefault(require(\"./implementation\"));\nvar common_2 = require(\"../common\");\nObject.defineProperty(exports, \"registerSerializer\", { enumerable: true, get: function () { return common_2.registerSerializer; } });\nvar transferable_2 = require(\"../transferable\");\nObject.defineProperty(exports, \"Transfer\", { enumerable: true, get: function () { return transferable_2.Transfer; } });\n/** Returns `true` if this code is currently running in a worker. */\nexports.isWorkerRuntime = implementation_1.default.isWorkerRuntime;\nlet exposeCalled = false;\nconst activeSubscriptions = new Map();\nconst isMasterJobCancelMessage = (thing) => thing && thing.type === messages_1.MasterMessageType.cancel;\nconst isMasterJobRunMessage = (thing) => thing && thing.type === messages_1.MasterMessageType.run;\n/**\n * There are issues with `is-observable` not recognizing zen-observable's instances.\n * We are using `observable-fns`, but it's based on zen-observable, too.\n */\nconst isObservable = (thing) => is_observable_1.default(thing) || isZenObservable(thing);\nfunction isZenObservable(thing) {\n    return thing && typeof thing === \"object\" && typeof thing.subscribe === \"function\";\n}\nfunction deconstructTransfer(thing) {\n    return transferable_1.isTransferDescriptor(thing)\n        ? { payload: thing.send, transferables: thing.transferables }\n        : { payload: thing, transferables: undefined };\n}\nfunction postFunctionInitMessage() {\n    const initMessage = {\n        type: messages_1.WorkerMessageType.init,\n        exposed: {\n            type: \"function\"\n        }\n    };\n    implementation_1.default.postMessageToMaster(initMessage);\n}\nfunction postModuleInitMessage(methodNames) {\n    const initMessage = {\n        type: messages_1.WorkerMessageType.init,\n        exposed: {\n            type: \"module\",\n            methods: methodNames\n        }\n    };\n    implementation_1.default.postMessageToMaster(initMessage);\n}\nfunction postJobErrorMessage(uid, rawError) {\n    const { payload: error, transferables } = deconstructTransfer(rawError);\n    const errorMessage = {\n        type: messages_1.WorkerMessageType.error,\n        uid,\n        error: common_1.serialize(error)\n    };\n    implementation_1.default.postMessageToMaster(errorMessage, transferables);\n}\nfunction postJobResultMessage(uid, completed, resultValue) {\n    const { payload, transferables } = deconstructTransfer(resultValue);\n    const resultMessage = {\n        type: messages_1.WorkerMessageType.result,\n        uid,\n        complete: completed ? true : undefined,\n        payload\n    };\n    implementation_1.default.postMessageToMaster(resultMessage, transferables);\n}\nfunction postJobStartMessage(uid, resultType) {\n    const startMessage = {\n        type: messages_1.WorkerMessageType.running,\n        uid,\n        resultType\n    };\n    implementation_1.default.postMessageToMaster(startMessage);\n}\nfunction postUncaughtErrorMessage(error) {\n    try {\n        const errorMessage = {\n            type: messages_1.WorkerMessageType.uncaughtError,\n            error: common_1.serialize(error)\n        };\n        implementation_1.default.postMessageToMaster(errorMessage);\n    }\n    catch (subError) {\n        // tslint:disable-next-line no-console\n        console.error(\"Not reporting uncaught error back to master thread as it \" +\n            \"occured while reporting an uncaught error already.\" +\n            \"\\nLatest error:\", subError, \"\\nOriginal error:\", error);\n    }\n}\nfunction runFunction(jobUID, fn, args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let syncResult;\n        try {\n            syncResult = fn(...args);\n        }\n        catch (error) {\n            return postJobErrorMessage(jobUID, error);\n        }\n        const resultType = isObservable(syncResult) ? \"observable\" : \"promise\";\n        postJobStartMessage(jobUID, resultType);\n        if (isObservable(syncResult)) {\n            const subscription = syncResult.subscribe(value => postJobResultMessage(jobUID, false, common_1.serialize(value)), error => {\n                postJobErrorMessage(jobUID, common_1.serialize(error));\n                activeSubscriptions.delete(jobUID);\n            }, () => {\n                postJobResultMessage(jobUID, true);\n                activeSubscriptions.delete(jobUID);\n            });\n            activeSubscriptions.set(jobUID, subscription);\n        }\n        else {\n            try {\n                const result = yield syncResult;\n                postJobResultMessage(jobUID, true, common_1.serialize(result));\n            }\n            catch (error) {\n                postJobErrorMessage(jobUID, common_1.serialize(error));\n            }\n        }\n    });\n}\n/**\n * Expose a function or a module (an object whose values are functions)\n * to the main thread. Must be called exactly once in every worker thread\n * to signal its API to the main thread.\n *\n * @param exposed Function or object whose values are functions\n */\nfunction expose(exposed) {\n    if (!implementation_1.default.isWorkerRuntime()) {\n        throw Error(\"expose() called in the master thread.\");\n    }\n    if (exposeCalled) {\n        throw Error(\"expose() called more than once. This is not possible. Pass an object to expose() if you want to expose multiple functions.\");\n    }\n    exposeCalled = true;\n    if (typeof exposed === \"function\") {\n        implementation_1.default.subscribeToMasterMessages(messageData => {\n            if (isMasterJobRunMessage(messageData) && !messageData.method) {\n                runFunction(messageData.uid, exposed, messageData.args.map(common_1.deserialize));\n            }\n        });\n        postFunctionInitMessage();\n    }\n    else if (typeof exposed === \"object\" && exposed) {\n        implementation_1.default.subscribeToMasterMessages(messageData => {\n            if (isMasterJobRunMessage(messageData) && messageData.method) {\n                runFunction(messageData.uid, exposed[messageData.method], messageData.args.map(common_1.deserialize));\n            }\n        });\n        const methodNames = Object.keys(exposed).filter(key => typeof exposed[key] === \"function\");\n        postModuleInitMessage(methodNames);\n    }\n    else {\n        throw Error(`Invalid argument passed to expose(). Expected a function or an object, got: ${exposed}`);\n    }\n    implementation_1.default.subscribeToMasterMessages(messageData => {\n        if (isMasterJobCancelMessage(messageData)) {\n            const jobUID = messageData.uid;\n            const subscription = activeSubscriptions.get(jobUID);\n            if (subscription) {\n                subscription.unsubscribe();\n                activeSubscriptions.delete(jobUID);\n            }\n        }\n    });\n}\nexports.expose = expose;\nif (typeof self !== \"undefined\" && typeof self.addEventListener === \"function\" && implementation_1.default.isWorkerRuntime()) {\n    self.addEventListener(\"error\", event => {\n        // Post with some delay, so the master had some time to subscribe to messages\n        setTimeout(() => postUncaughtErrorMessage(event.error || event), 250);\n    });\n    self.addEventListener(\"unhandledrejection\", event => {\n        const error = event.reason;\n        if (error && typeof error.message === \"string\") {\n            // Post with some delay, so the master had some time to subscribe to messages\n            setTimeout(() => postUncaughtErrorMessage(error), 250);\n        }\n    });\n}\nif (typeof process !== \"undefined\" && typeof process.on === \"function\" && implementation_1.default.isWorkerRuntime()) {\n    process.on(\"uncaughtException\", (error) => {\n        // Post with some delay, so the master had some time to subscribe to messages\n        setTimeout(() => postUncaughtErrorMessage(error), 250);\n    });\n    process.on(\"unhandledRejection\", (error) => {\n        if (error && typeof error.message === \"string\") {\n            // Post with some delay, so the master had some time to subscribe to messages\n            setTimeout(() => postUncaughtErrorMessage(error), 250);\n        }\n    });\n}\n","module.exports = require(\"./dist/worker/index\")\n","import { expose, Transfer } from 'threads/worker';\nimport { getDecoder } from './compression';\n\nasync function decode(fileDirectory, buffer) {\n  const decoder = await getDecoder(fileDirectory);\n  const decoded = await decoder.decode(fileDirectory, buffer);\n  return Transfer(decoded);\n}\n\nexpose(decode);\n"]}